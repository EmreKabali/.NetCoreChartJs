#pragma checksum "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "423f0d8a2a5a0ad9096907a03eacdad83b2c7eb5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\_ViewImports.cshtml"
using ChartJsApp;

#line default
#line hidden
#line 2 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\_ViewImports.cshtml"
using ChartJsApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"423f0d8a2a5a0ad9096907a03eacdad83b2c7eb5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"22c67c61bb5c7a0454b0d6947f6f88d04a13f018", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<ChartJsApp.Models.ViewModel>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(88, 399, true);
            WriteLiteral(@"
<div class=""row"">



    <div class=""col-md-6"">


        <div class=""panel"">


            <div class=""panel-heading"">

                <h3 class=""info"">Chart Js Kullanımı:</h3>

            </div>

            <div class=""panel-body"">

                <canvas id=""myChart"" width=""400"" height=""400""></canvas>

            </div>

        </div>

    </div>
</div>



");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(504, 650, true);
                WriteLiteral(@"

    <link rel=""stylesheet"" href=""//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"">

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js""></script>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.css"" />


    <script>



        $(document).ready(function () {

            var months = [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""];
            var newDataset = [];
            var currentcolor = """";
            var veriler = [];
            var map = new Map();


");
                EndContext();
#line 56 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
             foreach (var item in Model.GroupBy(x=>x.Year))
            {




                

#line default
#line hidden
#line 62 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
                 foreach (var item2 in item)
                {




#line default
#line hidden
                BeginContext(1309, 24, true);
                WriteLiteral("                        ");
                EndContext();
                BeginContext(1335, 14, true);
                WriteLiteral("veriler.push(\"");
                EndContext();
                BeginContext(1350, 13, false);
#line 67 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
                                   Write(item2.Freight);

#line default
#line hidden
                EndContext();
                BeginContext(1363, 5, true);
                WriteLiteral("\");\r\n");
                EndContext();
                BeginContext(1374, 20, true);
                WriteLiteral("                    ");
                EndContext();
                BeginContext(1396, 9, true);
                WriteLiteral("map.set(\'");
                EndContext();
                BeginContext(1406, 11, false);
#line 71 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
                          Write(item2.Month);

#line default
#line hidden
                EndContext();
                BeginContext(1417, 4, true);
                WriteLiteral("\', \'");
                EndContext();
                BeginContext(1422, 13, false);
#line 71 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
                                          Write(item2.Freight);

#line default
#line hidden
                EndContext();
                BeginContext(1435, 5, true);
                WriteLiteral("\');\r\n");
                EndContext();
#line 72 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"


                }

#line default
#line hidden
                BeginContext(1469, 16, true);
                WriteLiteral("                ");
                EndContext();
                BeginContext(1487, 34, true);
                WriteLiteral("currentcolor = getRandomColor();\r\n");
                EndContext();
                BeginContext(1525, 16, true);
                WriteLiteral("                ");
                EndContext();
                BeginContext(1543, 13, true);
                WriteLiteral("controldatas(");
                EndContext();
                BeginContext(1557, 8, false);
#line 81 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
                          Write(item.Key);

#line default
#line hidden
                EndContext();
                BeginContext(1565, 18, true);
                WriteLiteral(", veriler, map);\r\n");
                EndContext();
                BeginContext(1587, 16, true);
                WriteLiteral("                ");
                EndContext();
                BeginContext(1605, 14, true);
                WriteLiteral("map.clear();\r\n");
                EndContext();
                BeginContext(1625, 16, true);
                WriteLiteral("                ");
                EndContext();
                BeginContext(1643, 26, true);
                WriteLiteral("newDataset.push({ label: \"");
                EndContext();
                BeginContext(1670, 8, false);
#line 88 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"
                                       Write(item.Key);

#line default
#line hidden
                EndContext();
                BeginContext(1678, 209, true);
                WriteLiteral("\", data: veriler, backgroundColor: [currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor, currentcolor] });\r\n");
                EndContext();
                BeginContext(1889, 22, true);
                WriteLiteral("                      ");
                EndContext();
                BeginContext(1913, 14, true);
                WriteLiteral("veriler = []\r\n");
                EndContext();
#line 91 "C:\Users\e_kabali\source\repos\ChartJsApp\ChartJsApp\Views\Home\Index.cshtml"

            }

#line default
#line hidden
                BeginContext(1944, 1558, true);
                WriteLiteral(@"
            var ctx = document.getElementById('myChart').getContext('2d');


            var mychart = new Chart(ctx, {

                type: 'bar',
                data: {

                    labels: [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""],
                    datasets: newDataset

                }

            });


            function controldatas(label, values, aylar) {



                if (values.length < 12) {

                    veriler = [];
                    var i;
                    for (i = 0; i < 12; i++) {

                        if (aylar.has(months[i])) {

                            var ay = months[i];

                            var deger = aylar.get(ay);
                            veriler.push(deger);
                            veriler.push()

                        } else {

                            veriler.push(""0"");

                        }
      ");
                WriteLiteral(@"              }
                } else {

                    aylar.clear();
                    map.clear();
                }

            };

            function getRandomColor() {
                var letters = '0123456789ABCDEF'.split('');
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            };










        });



    </script>



");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<ChartJsApp.Models.ViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
